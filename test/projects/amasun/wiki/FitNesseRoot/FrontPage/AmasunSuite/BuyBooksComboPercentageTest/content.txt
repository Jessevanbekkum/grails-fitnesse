!1 Functionality - Buy a Book Combo - Percentages
The core of our business is to sell books. To sell as much books as possible, we've introduced the concept of package deals (or promo packages, or book combos, or just-really-good-deals, as our customers call it). Since this is such an important part of our business, we need to assert it works correctly. 

'''There are two types of discount: one fixed price (say 10 euro's discount on the total amount, which we'll call AMOUNT), and it would be nice if we could also get a discount which is percentage based, which will deduct a certain percentage of the combination of the two books (say 25% off when buying two fantasy books).'''

At the moment, we can link together books based on their ISBN code. We know it's not ideal, so in the future we should introduce our own code, but currently it works good enough, so any package can ben created by linking two books together. A promo package of more than two books is not needed at the moment, but would be nice for the future, say the end of 2013.

!3 Setup 
Setup the inventory, the promo packages and the currently known customers.

|initialize book inventory                                            |
|author        |title                      |isbn         |price|amount|
|Peter Ledbrook|Grails in Action           |0-8352-2051-6|10   |50    |
|Jason Rudolph |Getting started with Grails|0-8352-8936-1|49   |80    |
|Dierk Koenig  |Groovy in Action           |0-8352-3891-9|25   |65    |

|create promo package                                     |
|book 1 isbn  |book 2 isbn  |discount amount|discount type|
|0-8352-2051-6|0-8352-8936-1|10             |AMOUNT       |
|0-8352-2051-6|0-8352-3891-9|5              |AMOUNT       |

|intialize customer base|
|name                   |
|Rod Johnson            |
|Martin Fowler          |
|Robert Martin          |

!3 Execute
|script|customer buys book|Robert Martin                |
|buy   |1                 |book with isbn |0-8352-2051-6|
|buy   |2                 |books with isbn|0-8352-8936-1|
|place order |
!*****> Source code
{{{
class CustomerBuysBookFixture {
    private Customer customer

    BookService bookService
    Order order

    CustomerBuysBookFixture(String customerName) {
        this.customer = Customer.findByName(customerName)

        order = new Order(customer)
    }

    void buyBookWithIsbn(int amount, String isbn) {
        buyBooksWithIsbn(amount, isbn)
    }

    void buyBooksWithIsbn(int amount, String isbn) {
        Book book = bookService.findByIsbn(isbn)

        bookService.orderBook(order, book, amount)
    }

    void placeOrder() {
        bookService.placeOrder(order)
    }
}                                           
}}}
******!
!3 Verification
!4 With [[script][<FitNesse.UserGuide.SliM.ScriptTable]] table
|script|check order for customer|Robert Martin|
|check |subtotal                |108          |
|ensure |discount is               |10           |
|check |total                   |98           |
!*****> Source code
{{{
@Fixture
class CheckOrderForCustomer {
    @Delegate
    private Order order

    CheckOrderForCustomer(String name) {
        this.order = Order.findByCustomer(Customer.findByName(name))
    }

    boolean discountIs(Integer amount) {
        order.discount == amount
    }
}
}}}
**********!
!4 With [[decision][<FitNesse.UserGuide.SliM.DecisionTable]] table
|check book inventory                              |
|author        |title                      |amount?|
|Peter Ledbrook|Grails in Action           |49     |
|Jason Rudolph |Getting started with Grails|78     |
|Dierk Koenig  |Groovy in Action           |65     |
!*****> Source code
{{{
class CheckBookInventoryFixture {
    @Delegate
    Book book

    Integer amount

    InventoryService inventoryService

    void reset() {
        book = new Book()
    }

    void execute() {
        this.amount = inventoryService.getAmount(book)
    }
}
}}}
**********!
!4 With [[query][<FitNesse.UserGuide.SliM.QueryTable]] table
|query:check book inventory query                  |
|author        |title                      |amount |
|Peter Ledbrook|Grails in Action           |49     |
|Jason Rudolph |Getting started with Grails|78     |
|Dierk Koenig  |Groovy in Action           |65     |
!*****> Source code
{{{
class CheckBookInventoryQueryFixture {
    static queryFixture = true

    static mapping = ["author", "title", "amount"]

    InventoryService inventoryService

    def queryResults() {
        inventoryService.checkInventory()
    }
}}}}}
**********!
